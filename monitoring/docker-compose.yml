version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: neuramint_prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager:latest
    container_name: neuramint_alertmanager
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    ports:
      - "9093:9093"
    restart: unless-stopped
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:latest
    container_name: neuramint_grafana
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=neuramint_admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"
    depends_on:
      - prometheus
      - loki

  node_exporter:
    image: prom/node-exporter:latest
    container_name: neuramint_node_exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2)($|/)'
    ports:
      - "9100:9100"
    restart: unless-stopped
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"

  loki:
    image: grafana/loki:latest
    container_name: neuramint_loki
    volumes:
      - ./loki/loki-config.yml:/etc/loki/config.yml
      - loki_data:/loki
    command:
      - '-config.file=/etc/loki/config.yml'
    ports:
      - "3100:3100"
    restart: unless-stopped
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"

  promtail:
    image: grafana/promtail:latest
    container_name: neuramint_promtail
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log
    command:
      - '-config.file=/etc/promtail/config.yml'
    restart: unless-stopped
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"
    depends_on:
      - loki

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: neuramint_cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"

  solana_exporter:
    image: node:18-alpine
    container_name: neuramint_solana_exporter
    working_dir: /app
    volumes:
      - ./solana-exporter:/app
    command: sh -c "npm install && node index.js"
    environment:
      - SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
      - PORT=9164
    ports:
      - "9164:9164"
    restart: unless-stopped
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:
  loki_data: 